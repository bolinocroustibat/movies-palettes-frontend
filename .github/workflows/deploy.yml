name: Deploy to prod when push on main

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Bump version in package.json to ${{ github.ref_name }}
        run: sed -E -i 's/"version":[[:space:]]"[0-9]+.[0-9]+.[0-9]+"/"version":\ "${{ github.ref_name }}"/g' ./package.json

      - name: Commit and push updated package.json
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: "chore: bump version to ${{ github.ref_name }}"
          commit_user_name: Adrien Carpentier
          commit_user_email: me@adriencarpentier.com
          commit_author: Adrien Carpentier <me@adriencarpentier.com>

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: bump-version
    if: always()
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: latest

      - name: Install dependencies
        run: deno install

      - name: Download movies data to static directory
        run: |
          mkdir -p static
          wget -O static/movies_palettes.json '${{ vars.MOVIES_JSON_URL }}'

      - name: Test movies data
        run: |
          echo "Number of movies: $(jq -r '.movies | length' static/movies_palettes.json)"
          echo "Last updated: $(jq .last_updated static/movies_palettes.json)"

      - name: Build with Deno and Vite
        env:
          VITE_ENV: production
          VITE_API_JSON_URL: "https://adriencarpentier.com/movies-palettes/movies_palettes.json"
        run: deno task build

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Adding server to known hosts
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: rsync -avz --checksum --exclude '.git' --delete ./build/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}
